class Node:
    
    def __init__(self,val):
        self.val=val
        self.next=None
        self.prev=None
        
class LinkedList:
    
    def __init__(self):
        self.head=None

        
    def add_nodes(self,node):
        
        if self.head is None:
            self.head=node
            
        else:
            node.next=self.head
            self.head.prev=node
            self.head=node
            
        return
    
    def print_nodes(self):
        
        if self.head is None:
            return 0
        else:
            
            while self.head:
                print(self.head.val),
                self.head=self.head.next


    def print_nodes_in_rev_order(self):
            
            while self.head.next:
                    self.head=self.head.next
            

            while self.head:
                print(self.head.val),
                self.head=self.head.prev
                

      

# creating the linked list                
arr=[7,4,2,6,4,2,11]
ll = LinkedList()
for x in arr:
    print("adding node with val " + str(x))
    node1 = Node(x)
    ll.add_nodes(node1)


print("printing in reverse order")
print(ll.print_nodes_in_rev_order()) 

# recreating the linked list
for x in arr:
    print("adding node with val " + str(x))
    node1 = Node(x)
    ll.add_nodes(node1)

print("printing in same order")
print(ll.print_nodes()) 
